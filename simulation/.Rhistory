as.vector(1/(1 + exp(-A_temp %*% a))
)
a_Var_matrix = diag(1,2,3,4)
View(a_Var_matrix)
a_Var_matrix = diag(1,2,4)
View(a_Var_matrix)
a_Var_matrix = diag(a_old)
View(a_Var_matrix)
a_fn <- function(a) {
asum = sum(gamma_temp * (A_temp %*% a) - log(1 + exp(A_temp %*% a))) - sum(1/2 * t(a) * a_Var_matrix * a)
asum = as.vector(asum)
return(-asum)
}
a_gr <- function(a) {
a_gr_sum = apply(gamma_temp * A_temp - as.vector(1/(1 + exp(-A_temp %*% a))) * A_temp,2,sum) - apply(a_Var_matrix * a, 2, sum)
a_gr_sum = as.vector(a_gr_sum)
return(-a_gr_sum)
}
a_Hess <- function(a) {
a_Hess_sum = matrix(0,3,3)
for (i in 1:nrow(A_temp)) {
a_Hess_value = as.numeric(-exp(-A_temp[i,] %*% a)/(1 + exp(-A_temp[i,] %*% a)) ^ 2) * outer(A_temp[i,],A_temp[i,])
a_Hess_sum = a_Hess_sum + a_Hess_value
}
a_Hess_sum = a_Hess_sum - a_Var_matrix
a_Hess_sum = as.matrix(a_Hess_sum)
return(-(a_Hess_sum))
}
a_temp = optimx(a_old, a_fn, method='CG', gr = a_gr, hess = a_Hess)[1:3]
a_Hess_sum = matrix(0,3,3)
for (i in 1:nrow(A_temp)) {
a_Hess_value = as.numeric(-exp(-A_temp[i,] %*% a)/(1 + exp(-A_temp[i,] %*% a)) ^ 2) * outer(A_temp[i,],A_temp[i,])
a_Hess_sum = a_Hess_sum + a_Hess_value
}
a_Hess_sum = a_Hess_sum - a_Var_matrix
a_Hess_sum = as.matrix(a_Hess_sum)
return(-(a_Hess_sum))
asum = sum(gamma_temp * (A_temp %*% a) - log(1 + exp(A_temp %*% a))) - sum(1/2 * t(a) * a_Var_matrix * a)
asum = as.vector(asum)
return(-asum)
}
a_gr <- function(a) {
a_gr_sum = apply(gamma_temp * A_temp - as.vector(1/(1 + exp(-A_temp %*% a))) * A_temp,2,sum) - apply(a_Var_matrix * a, 2, sum)
a_gr_sum = as.vector(a_gr_sum)
return(-a_gr_sum)
}
a_Hess <- function(a) {
a_Hess_sum = matrix(0,nrow(a_Var_matrix),ncol(a_Var_matrix))
for (i in 1:nrow(A_temp)) {
a_Hess_value = as.numeric(-exp(-A_temp[i,] %*% a)/(1 + exp(-A_temp[i,] %*% a)) ^ 2) * outer(A_temp[i,],A_temp[i,])
a_Hess_sum = a_Hess_sum + a_Hess_value
}
a_Hess_sum = a_Hess_sum - a_Var_matrix
a_Hess_sum = as.matrix(a_Hess_sum)
return(-(a_Hess_sum))
}
a_temp = optimx(a_old, a_fn, method='CG', gr = a_gr, hess = a_Hess)[1:3]
a_Hess_sum = matrix(0,nrow(a_Var_matrix),ncol(a_Var_matrix))
for (i in 1:nrow(A_temp)) {
a_Hess_value = as.numeric(-exp(-A_temp[i,] %*% a)/(1 + exp(-A_temp[i,] %*% a)) ^ 2) * outer(A_temp[i,],A_temp[i,])
a_Hess_sum = a_Hess_sum + a_Hess_value
}
a_Hess_sum = a_Hess_sum - a_Var_matrix
a_Hess_sum = as.matrix(a_Hess_sum)
View(a_Hess_sum)
a_gr_sum = apply(gamma_temp * A_temp - as.vector(1/(1 + exp(-A_temp %*% a))) * A_temp,2,sum) - apply(a_Var_matrix * a, 2, sum)
a_gr_sum = as.vector(a_gr_sum)
return(-a_gr_sum)
a_gr_sum
asum = sum(gamma_temp * (A_temp %*% a) - log(1 + exp(A_temp %*% a))) - sum(1/2 * t(a) * a_Var_matrix * a)
asum = as.vector(asum)
asum = sum(gamma_temp * (A_temp %*% a) - log(1 + exp(A_temp %*% a))) - sum(1/2 * t(a) * a_Var_matrix * a)
gamma_temp * (A_temp %*% a) - log(1 + exp(A_temp %*% a)))
sum(gamma_temp * (A_temp %*% a) - log(1 + exp(A_temp %*% a)))
a
a_Var_matrix * a
t(a) * a_Var_matrix * a
t(a) * a_Var_matrix
t(a)
a_Var_matrix * a
1/2 * t(a)
as.matrix(a_Var_matrix * a)
t(a) * as.matrix(a_Var_matrix * a)
t(a)
as.matrix(t(a))
as.matrix(t(a)) * a_Var_matrix * a
t(a) %*% (a_Var_matrix * a)
sum(1/2 * t(a) %*% (a_Var_matrix * a))
a_fn <- function(a) {
asum = sum(gamma_temp * (A_temp %*% a) - log(1 + exp(A_temp %*% a))) - sum(1/2 * t(a) %*% (a_Var_matrix * a))
asum = as.vector(asum)
return(-asum)
}
a_gr <- function(a) {
a_gr_sum = apply(gamma_temp * A_temp - as.vector(1/(1 + exp(-A_temp %*% a))) * A_temp,2,sum) - apply(a_Var_matrix * a, 2, sum)
a_gr_sum = as.vector(a_gr_sum)
return(-a_gr_sum)
}
a_Hess <- function(a) {
a_Hess_sum = matrix(0,nrow(a_Var_matrix),ncol(a_Var_matrix))
for (i in 1:nrow(A_temp)) {
a_Hess_value = as.numeric(-exp(-A_temp[i,] %*% a)/(1 + exp(-A_temp[i,] %*% a)) ^ 2) * outer(A_temp[i,],A_temp[i,])
a_Hess_sum = a_Hess_sum + a_Hess_value
}
a_Hess_sum = a_Hess_sum - a_Var_matrix
a_Hess_sum = as.matrix(a_Hess_sum)
return(-(a_Hess_sum))
}
a_temp = optimx(a_old, a_fn, method='CG', gr = a_gr, hess = a_Hess)[1:3]
View(a_temp)
a_temp = optimx(a_old, a_fn, method='CG', gr = a_gr, hess = a_Hess)[1:nrow(a_Var_matrix)]
View(a_temp)
a_temp = optimx(a_old, a_fn, method='CG', gr = a_gr, hess = a_Hess)[1:nrow(a_Var_matrix)]
View(a_temp)
beta_temp
b
b_old = c(1,2,3,4)
b=b_old
tau
(- (A_temp %*% b) - tau * beta_temp ^ 2 * (1/exp(A_temp %*% b)))
sum(gamma_temp/2 *(- (A_temp %*% b) - tau * beta_temp ^ 2 * (1/exp(A_temp %*% b))))
b_Var_matrix
b_Var_matrix = a_Var_matrix
sum(gamma_temp/2 *(- (A_temp %*% b) - tau * beta_temp ^ 2 * (1/exp(A_temp %*% b))))
sum(1/2 * t(b) %*% (b_Var_matrix * b))
bsum = sum(gamma_temp/2 *(- (A_temp %*% b) - tau * beta_temp ^ 2 * (1/exp(A_temp %*% b)))) - sum(1/2 * t(b) %*% (b_Var_matrix * b))
bsum = as.vector(bsum)
apply(gamma_temp/2 *(- A_temp + as.vector(tau * beta_temp ^ 2 * (1/exp(A_temp %*% b))) * A_temp), 2, sum)
apply(b_Var_matrix * b, 2, sum)
b_Hess_sum = matrix(0,nrow(b_Var_matrix),ncol(b_Var_matrix))
View(b_Hess_sum)
gamma_temp/2 * tau * beta_temp ^ 2
b_Hess_value = as.numeric(gamma_temp[i]/2 * tau * beta_temp[i] ^ 2 * exp(-A_temp[i,] %*% a) * outer(A_temp[i,],A_temp[i,]))
i =1
outer(A_temp[i,],A_temp[i,]
)
gamma_temp[i]/2 * tau * beta_temp[i] ^ 2 * exp(-A_temp[i,] %*% a)
gamma_temp[i]/2 * tau * beta_temp[i] ^ 2 * exp(-A_temp[i,] %*% a) * outer(A_temp[i,],A_temp[i,])
gamma_temp[i]/2 * tau * beta_temp[i] ^ 2 * exp(-A_temp[i,] %*% a)
as.numeric(gamma_temp[i]/2 * tau * beta_temp[i] ^ 2 * exp(-A_temp[i,] %*% a)) * outer(A_temp[i,],A_temp[i,])
b_fn <- function(b){
bsum = sum(gamma_temp/2 *(- (A_temp %*% b) - tau * beta_temp ^ 2 * (1/exp(A_temp %*% b)))) - sum(1/2 * t(b) %*% (b_Var_matrix * b))
bsum = as.vector(bsum)
return(-bsum)
}
b_gr <- function(b){
b_gr_sum = apply(gamma_temp/2 *(- A_temp + as.vector(tau * beta_temp ^ 2 * (1/exp(A_temp %*% b))) * A_temp), 2, sum) - apply(b_Var_matrix * b, 2, sum)
b_gr_sum = as.vector(b_gr_sum)
return(-b_gr_sum)
}
b_Hess <- function(b) {
b_Hess_sum = matrix(0,nrow(b_Var_matrix),ncol(b_Var_matrix))
for (i in 1:nrow(A_temp)) {
b_Hess_value = as.numeric(gamma_temp[i]/2 * tau * beta_temp[i] ^ 2 * exp(-A_temp[i,] %*% a)) * outer(A_temp[i,],A_temp[i,])
b_Hess_sum = b_Hess_sum + b_Hess_value
}
b_Hess_sum = b_Hess_sum - b_Var_matrix
b_Hess_sum = as.matrix(b_Hess_sum)
return(-b_Hess_sum)
}
b_temp = optimx(Bpar, b_fn, method='CG', gr = b_gr, Hess = b_Hess)[1:3]
b_temp = optimx(b_old, b_fn, method='CG', gr = b_gr, Hess = b_Hess)[1:3]
bsum = sum(gamma_temp/2 *(- (A_temp %*% b) - tau * beta_temp ^ 2 * (1/exp(A_temp %*% b)))) - sum(1/2 * t(b) %*% (b_Var_matrix * b))
bsum = as.vector(bsum)
a_temp = optimx(a_old, a_fn, method='CG', gr = a_gr, hess = a_Hess)[1:nrow(a_Var_matrix)]
b_Hess_sum = matrix(0,nrow(b_Var_matrix),ncol(b_Var_matrix))
for (i in 1:nrow(A_temp)) {
b_Hess_value = as.numeric(gamma_temp[i]/2 * tau * beta_temp[i] ^ 2 * exp(-A_temp[i,] %*% a)) * outer(A_temp[i,],A_temp[i,])
b_Hess_sum = b_Hess_sum + b_Hess_value
}
b_Hess_sum = b_Hess_sum - b_Var_matrix
b_Hess_sum = as.matrix(b_Hess_sum)
View(b_Hess_sum)
b_temp = optimx(b_old, b_fn, method='CG', gr = b_gr, Hess = b_Hess)
b_old
gamma_temp
b_fn(b_old)
b_gr(b_old)
b_Hess(b_old)
b_fn <- function(b){
bsum = sum(gamma_temp/2 *(- (A_temp %*% b) - tau * beta_temp ^ 2 * (1/exp(A_temp %*% b)))) - sum(1/2 * t(b) %*% (b_Var_matrix * b))
bsum = as.vector(bsum)
return(-bsum)
}
b_gr <- function(b){
b_gr_sum = apply(gamma_temp/2 *(- A_temp + as.vector(tau * beta_temp ^ 2 * (1/exp(A_temp %*% b))) * A_temp), 2, sum) - apply(b_Var_matrix * b, 2, sum)
b_gr_sum = as.vector(b_gr_sum)
return(-b_gr_sum)
}
b_Hess <- function(b) {
b_Hess_sum = matrix(0,nrow(b_Var_matrix),ncol(b_Var_matrix))
for (i in 1:nrow(A_temp)) {
b_Hess_value = as.numeric(gamma_temp[i]/2 * tau * beta_temp[i] ^ 2 * exp(-A_temp[i,] %*% a)) * outer(A_temp[i,],A_temp[i,])
b_Hess_sum = b_Hess_sum + b_Hess_value
}
b_Hess_sum = b_Hess_sum - b_Var_matrix
b_Hess_sum = as.matrix(b_Hess_sum)
return(-b_Hess_sum)
}
b_temp = optimx(b_old, b_fn, method='CG', gr = b_gr, Hess = b_Hess)[1:3]
b_temp = optimx(b_old, b_fn, method='CG', gr = b_gr, hess = b_Hess)[1:3]
b_Hess <- function(b) {
b_Hess_sum = matrix(0,nrow(b_Var_matrix),ncol(b_Var_matrix))
for (i in 1:nrow(A_temp)) {
b_Hess_value = as.numeric(- gamma_temp[i]/2 * tau * beta_temp[i] ^ 2 * exp(-A_temp[i,] %*% a)) * outer(A_temp[i,],A_temp[i,])
b_Hess_sum = b_Hess_sum + b_Hess_value
}
b_Hess_sum = b_Hess_sum - b_Var_matrix
b_Hess_sum = as.matrix(b_Hess_sum)
return(-b_Hess_sum)
}
b_temp = optimx(b_old, b_fn, method='CG', gr = b_gr, hess = b_Hess)[1:3]
View(b_temp)
b_temp = optimx(b_old, b_fn, method='CG', gr = b_gr, hess = b_Hess)[1:nrow(b_Var_matrix)]
View(b_temp)
#####################################################
Asigma_2 = a_Hess(a_temp)
a_temp
a_Hess(a_temp)
#####################################################
Asigma_2 = a_Hess(as.vector(a_temp))
a_Hess(as.vector(a_temp))
as.vector(a_temp)
as.numeric(a_temp)
Asigma_2 = a_Hess(as.numeric(a_temp))
View(Asigma_2)
Asigma_2 = -a_Hess(as.numeric(a_temp))
View(Asigma_2)
Bsigma_2 = -b_Hess(as.numeric(b_temp))
View(Bsigma_2)
diag(b_Hess(b_old))
b_Hess()
b_Hess
diag(b_Hess(b_old))
b_new_Variance = 1/diag(b_Hess(b_old))
b_fn <- function(b){
bsum = sum(gamma_temp/2 *(- (A_temp %*% b) - tau * beta_temp ^ 2 * (1/exp(A_temp %*% b)))) - sum(1/2 * t(b) %*% (1/b_Var_matrix * b))
bsum = as.vector(bsum)
return(-bsum)
}
b_gr <- function(b){
b_gr_sum = apply(gamma_temp/2 *(- A_temp + as.vector(tau * beta_temp ^ 2 * (1/exp(A_temp %*% b))) * A_temp), 2, sum) - apply(1/b_Var_matrix * b, 2, sum)
b_gr_sum = as.vector(b_gr_sum)
return(-b_gr_sum)
}
b_Hess <- function(b) {
b_Hess_sum = matrix(0,nrow(b_Var_matrix),ncol(b_Var_matrix))
for (i in 1:nrow(A_temp)) {
b_Hess_value = as.numeric(- gamma_temp[i]/2 * tau * beta_temp[i] ^ 2 * exp(-A_temp[i,] %*% b)) * outer(A_temp[i,],A_temp[i,])
b_Hess_sum = b_Hess_sum + b_Hess_value
}
b_Hess_sum = b_Hess_sum - 1/b_Var_matrix
b_Hess_sum = as.matrix(b_Hess_sum)
return(-b_Hess_sum)
}
b_temp = optimx(b_old, b_fn, method='CG', gr = b_gr, hess = b_Hess)[1:nrow(b_Var_matrix)]
b_new_Variance = 1/diag(b_Hess(b_old))
library(optimx)
a_fn <- function(a) {
asum = sum(gamma_temp * (A_temp %*% a) - log(1 + exp(A_temp %*% a))) - sum(1/2 * t(a) %*% (1/a_Var_matrix * a))
asum = as.vector(asum)
return(-asum)
}
a_gr <- function(a) {
a_gr_sum = apply(gamma_temp * A_temp - as.vector(1/(1 + exp(-A_temp %*% a))) * A_temp,2,sum) - apply(1/a_Var_matrix * a, 2, sum)
a_gr_sum = as.vector(a_gr_sum)
return(-a_gr_sum)
}
a_Hess <- function(a) {
a_Hess_sum = matrix(0,nrow(a_Var_matrix),ncol(a_Var_matrix))
for (i in 1:nrow(A_temp)) {
a_Hess_value = as.numeric(-exp(-A_temp[i,] %*% a)/(1 + exp(-A_temp[i,] %*% a)) ^ 2) * outer(A_temp[i,],A_temp[i,])
a_Hess_sum = a_Hess_sum + a_Hess_value
}
a_Hess_sum = a_Hess_sum - 1/a_Var_matrix
a_Hess_sum = as.matrix(a_Hess_sum)
return(-(a_Hess_sum))
}
a_temp = optimx(a_old, a_fn, method='CG', gr = a_gr, hess = a_Hess)[1:nrow(a_Var_matrix)]
a_new_Variance = 1/diag(a_Hess(a_old))
inverse_a_Var_matrix = diag(1/a_variance)
inverse_b_Var_matrix = diag(1/b_variance)
a_variance = prehyp[,3]
b_variance = prehyp[,4]
inverse_a_Var_matrix = diag(1/a_variance)
inverse_b_Var_matrix = diag(1/b_variance)
prehyp <- read.table(hypcurrent_file, header=TRUE)
print("hyper parameter values before MCMC: ")
print(prehyp)
a_old = prehyp[,1]
b_old = prehyp[,2]
a_variance = prehyp[,3]
b_variance = prehyp[,4]
inverse_a_Var_matrix = diag(1/a_variance)
inverse_b_Var_matrix = diag(1/b_variance)
setwd("~/Desktop/bfGWAS/simulation")
prehyp <- read.table(hypcurrent_file, header=TRUE)
print("hyper parameter values before MCMC: ")
print(prehyp)
a_old = prehyp[,1]
b_old = prehyp[,2]
a_variance = prehyp[,3]
b_variance = prehyp[,4]
inverse_a_Var_matrix = diag(1/a_variance)
inverse_b_Var_matrix = diag(1/b_variance)
hypcurrent_file = "hypval.current"
prehyp <- read.table(hypcurrent_file, header=TRUE)
print("hyper parameter values before MCMC: ")
print(prehyp)
a_old = prehyp[,1]
b_old = prehyp[,2]
a_variance = prehyp[,3]
b_variance = prehyp[,4]
inverse_a_Var_matrix = diag(1/a_variance)
inverse_b_Var_matrix = diag(1/b_variance)
Annodata = Annodata[Annodata$gamma > 0,]
beta_temp = Annodata[, "beta"]
gamma_temp = Annodata[,"gamma"]
A_temp = cbind(rep(1,nrow(Annodata)),Annodata[,-c(1:3)])
A_temp = as.matrix(A_temp)
Annofile = "Annodata.txt"
Annodata = read.table(Annofile, sep="\t", header=FALSE)
#Number of annotation files
Anum = ncol(Annodata) - 3
temp_col_names <- c("SNP","gamma", "beta")
for(i in 1:Anum){
temp_col_names <- c(temp_col_names,
paste("Annotation", i, sep = "_"))
}
colnames(Annodata) <- temp_col_names
a_fn <- function(a) {
asum = sum(gamma_temp * (A_temp %*% a) - log(1 + exp(A_temp %*% a))) - sum(1/2 * t(a) %*% (inverse_a_Var_matrix * a))
asum = as.vector(asum)
return(-asum)
}
a_gr <- function(a) {
a_gr_sum = apply(gamma_temp * A_temp - as.vector(1/(1 + exp(-A_temp %*% a))) * A_temp,2,sum) - apply(inverse_a_Var_matrix * a, 2, sum)
a_gr_sum = as.vector(a_gr_sum)
return(-a_gr_sum)
}
a_Hess <- function(a) {
a_Hess_sum = matrix(0,nrow(inverse_a_Var_matrix),ncol(inverse_a_Var_matrix))
for (i in 1:nrow(A_temp)) {
a_Hess_value = as.numeric(-exp(-A_temp[i,] %*% a)/(1 + exp(-A_temp[i,] %*% a)) ^ 2) * outer(A_temp[i,],A_temp[i,])
a_Hess_sum = a_Hess_sum + a_Hess_value
}
a_Hess_sum = a_Hess_sum - inverse_inverse_a_Var_matrix
a_Hess_sum = as.matrix(a_Hess_sum)
return(-(a_Hess_sum))
}
a_temp = optimx(a_old, a_fn, method='CG', gr = a_gr, hess = a_Hess)[1:nrow(inverse_a_Var_matrix)]
a_new_Variance = 1/diag(a_Hess(a_old))
####################################################
a_fn <- function(a) {
asum = sum(gamma_temp * (A_temp %*% a) - log(1 + exp(A_temp %*% a))) - sum(1/2 * t(a) %*% (inverse_a_Var_matrix * a))
asum = as.vector(asum)
return(-asum)
}
a_gr <- function(a) {
a_gr_sum = apply(gamma_temp * A_temp - as.vector(1/(1 + exp(-A_temp %*% a))) * A_temp,2,sum) - apply(inverse_a_Var_matrix * a, 2, sum)
a_gr_sum = as.vector(a_gr_sum)
return(-a_gr_sum)
}
a_Hess <- function(a) {
a_Hess_sum = matrix(0,nrow(inverse_a_Var_matrix),ncol(inverse_a_Var_matrix))
for (i in 1:nrow(A_temp)) {
a_Hess_value = as.numeric(-exp(-A_temp[i,] %*% a)/(1 + exp(-A_temp[i,] %*% a)) ^ 2) * outer(A_temp[i,],A_temp[i,])
a_Hess_sum = a_Hess_sum + a_Hess_value
}
a_Hess_sum = a_Hess_sum - inverse_a_Var_matrix
a_Hess_sum = as.matrix(a_Hess_sum)
return(-(a_Hess_sum))
}
a_temp = optimx(a_old, a_fn, method='CG', gr = a_gr, hess = a_Hess)[1:nrow(inverse_a_Var_matrix)]
a_new_Variance = 1/diag(a_Hess(a_old))
#########################################
a_new_Variance
b_fn <- function(b){
bsum = sum(gamma_temp/2 *(- (A_temp %*% b) - tau * beta_temp ^ 2 * (1/exp(A_temp %*% b)))) - sum(1/2 * t(b) %*% (inverse_b_Var_matrix * b))
bsum = as.vector(bsum)
return(-bsum)
}
b_gr <- function(b){
b_gr_sum = apply(gamma_temp/2 *(- A_temp + as.vector(tau * beta_temp ^ 2 * (1/exp(A_temp %*% b))) * A_temp), 2, sum) - apply(inverse_b_Var_matrix * b, 2, sum)
b_gr_sum = as.vector(b_gr_sum)
return(-b_gr_sum)
}
b_Hess <- function(b) {
b_Hess_sum = matrix(0,nrow(inverse_b_Var_matrix),ncol(inverse_b_Var_matrix))
for (i in 1:nrow(A_temp)) {
b_Hess_value = as.numeric(- gamma_temp[i]/2 * tau * beta_temp[i] ^ 2 * exp(-A_temp[i,] %*% b)) * outer(A_temp[i,],A_temp[i,])
b_Hess_sum = b_Hess_sum + b_Hess_value
}
b_Hess_sum = b_Hess_sum - inverse_b_Var_matrix
b_Hess_sum = as.matrix(b_Hess_sum)
return(-b_Hess_sum)
}
b_temp = optimx(b_old, b_fn, method='CG', gr = b_gr, hess = b_Hess)[1:nrow(inverse_b_Var_matrix)]
b_new_Variance = 1/diag(b_Hess(b_old))
b_new_Variance
A = read.table("Annotation.txt", header = F)
View(A)
write.table(A,"Annotation.txt",col.names = F,quote = F,row.names = F, sep = "\t")
View(Asigma_2)
53/625 =
s
53/625
log(10)
?rnorm
ln(0.0064/(1-0.0064))
log(0.0064/(1-0.0064))
log(10)
a_fn <- function(a) {
asum = sum(gamma_temp * (A_temp %*% a) - log(1 + exp(A_temp %*% a))) - sum(1/2 * t(a) %*% (inverse_a_Var_matrix * a))
asum = as.vector(asum)
return(-asum)
}
a_gr <- function(a) {
a_gr_sum = apply(gamma_temp * A_temp - as.vector(1/(1 + exp(-A_temp %*% a))) * A_temp,2,sum) - apply(inverse_a_Var_matrix * a, 2, sum)
a_gr_sum = as.vector(a_gr_sum)
return(-a_gr_sum)
}
a_Hess <- function(a) {
a_Hess_sum = matrix(0,nrow(inverse_a_Var_matrix),ncol(inverse_a_Var_matrix))
for (i in 1:nrow(A_temp)) {
a_Hess_value = as.numeric(-exp(-A_temp[i,] %*% a)/(1 + exp(-A_temp[i,] %*% a)) ^ 2) * outer(A_temp[i,],A_temp[i,])
a_Hess_sum = a_Hess_sum + a_Hess_value
}
a_Hess_sum = a_Hess_sum - inverse_a_Var_matrix
a_Hess_sum = as.matrix(a_Hess_sum)
return(-(a_Hess_sum))
}
View(A_temp)
View(a_temp)
a_temp = optimx(a_old, a_fn, method='CG', gr = a_gr, hess = a_Hess)[1:nrow(inverse_a_Var_matrix)]
library(optimx)
a_temp = optimx(a_old, a_fn, method='CG', gr = a_gr, hess = a_Hess)[1:nrow(inverse_a_Var_matrix)]
a_temp
a_temp = optimx(a_old, a_fn, method='CG', gr = a_gr, hess = a_Hess)[1:nrow(inverse_a_Var_matrix), upper = -5]
a_temp = optimx(a_old, a_fn, method='CG', gr = a_gr, hess = a_Hess, upper = -5)[1:nrow(inverse_a_Var_matrix), ]
a_temp = optimx(a_old, a_fn, method='L-BFGS-B', gr = a_gr, hess = a_Hess, upper = -5)[1:nrow(inverse_a_Var_matrix), ]
a_temp = optimx(a_old, a_fn, method='L-BFGS-B', gr = a_gr, hess = a_Hess)[1:nrow(inverse_a_Var_matrix), ]
View(a_temp)
a_temp = optimx(a_old, a_fn, method='L-BFGS-B', gr = a_gr, hess = a_Hess, upper = c(-10, 0, 0, 0))[1:nrow(inverse_a_Var_matrix), ]
a_temp = optimx(a_old, a_fn, method='L-BFGS-B', gr = a_gr, hess = a_Hess, upper = c(1, 0, 0, 0))[1:nrow(inverse_a_Var_matrix), ]
a_temp = optimx(a_old, a_fn, method='L-BFGS-B', gr = a_gr, hess = a_Hess, upper = c(1, 1, 1, 1))[1:nrow(inverse_a_Var_matrix), ]
a_temp = optimx(a_old, a_fn, method='L-BFGS-B', gr = a_gr, hess = a_Hess, upper = 10)[1:nrow(inverse_a_Var_matrix), ]
View(a_temp)
View(a_temp)
a_temp = optimx(a_old, a_fn, method='L-BFGS-B', gr = a_gr, hess = a_Hess, upper = c(10,0,0,0))[1:nrow(inverse_a_Var_matrix), ]
a_temp = optimx(a_old, a_fn, method='L-BFGS-B', gr = a_gr, hess = a_Hess, upper = -10)[1:nrow(inverse_a_Var_matrix), ]
a_temp = c(-10,0,0,0)
a_temp = optimx(a_old, a_fn, method='L-BFGS-B', gr = a_gr, hess = a_Hess, upper = -10)[1:nrow(inverse_a_Var_matrix), ]
a_temp = optimx(a_old, a_fn, method='L-BFGS-B', gr = a_gr, hess = a_Hess, upper = c(0,0,0,0))[1:nrow(inverse_a_Var_matrix), ]
a_temp = optimx(a_old, a_fn, method='L-BFGS-B', gr = a_gr, hess = a_Hess, upper = 0)[1:nrow(inverse_a_Var_matrix), ]
a_new_Variance = 1/diag(a_Hess(a_old))
####################################################
b_fn <- function(b){
bsum = sum(gamma_temp/2 *(- (A_temp %*% b) - tau * beta_temp ^ 2 * (1/exp(A_temp %*% b)))) - sum(1/2 * t(b) %*% (inverse_b_Var_matrix * b))
bsum = as.vector(bsum)
return(-bsum)
}
a_temp = optimx(a_old, a_fn, method='L-BFGS-B', gr = a_gr, hess = a_Hess, lower = 0)[1:nrow(inverse_a_Var_matrix), ]
a_temp = optimx(a_old, a_fn, method='L-BFGS-B', gr = a_gr, hess = a_Hess, lower = inf)[1:nrow(inverse_a_Var_matrix), ]
a_temp = optimx(a_old, a_fn, method='L-BFGS-B', gr = a_gr, hess = a_Hess, lower = -10)[1:nrow(inverse_a_Var_matrix), ]
View(a_temp)
View(a_temp)
a_temp = optimx(a_old, a_fn, method='L-BFGS-B', gr = a_gr, hess = a_Hess, upper =10)[1:nrow(inverse_a_Var_matrix), ]
View(a_temp)
a_temp = optimx(a_old, a_fn, method='L-BFGS-B', gr = a_gr, hess = a_Hess, upper =3)[1:nrow(inverse_a_Var_matrix), ]
a_temp = optimx(a_old, a_fn, method='L-BFGS-B', gr = a_gr, hess = a_Hess, upper =2)[1:nrow(inverse_a_Var_matrix), ]
a_temp = optimx(a_old, a_fn, method='L-BFGS-B', gr = a_gr, hess = a_Hess, upper = c(3,3,3,3))[1:nrow(inverse_a_Var_matrix), ]
View(a_temp)
View(a_temp)
a_temp = optimx(a_old, a_fn, method='L-BFGS-B', gr = a_gr, hess = a_Hess, upper = c(1,3,3,3))[1:nrow(inverse_a_Var_matrix), ]
a_temp = optimx(a_old, a_fn, method='L-BFGS-B', gr = a_gr, hess = a_Hess, upper = c(5,3,3,3))[1:nrow(inverse_a_Var_matrix), ]
View(a_temp)
a_temp = optimx(a_old, a_fn, method='CG', gr = a_gr, hess = a_Hess, upper = c(5,3,3,3))[1:nrow(inverse_a_Var_matrix), ]
a_temp = optimx(a_old, a_fn, method='L-BFGS-B', gr = a_gr, hess = a_Hess, upper = c(-10,0,0,0))[1:nrow(inverse_a_Var_matrix), ]
a_temp = optimx(a_old, a_fn, method='L-BFGS-B', gr = a_gr, hess = a_Hess, upper = c(-10,10,10,10))[1:nrow(inverse_a_Var_matrix), ]
a_temp = optimx(a_old, a_fn, method='L-BFGS-B', gr = a_gr, hess = a_Hess, upper = c(-5,10,10,10))[1:nrow(inverse_a_Var_matrix), ]
View(A_temp)
View(a_temp)
b_temp = optimx(b_old, b_fn, method='L-BFGS-B', gr = b_gr, hess = b_Hess, upper = 2)[1:nrow(inverse_b_Var_matrix)]
View(a_temp)
b_temp = optimx(b_old, b_fn, method='L-BFGS-B', gr = b_gr, hess = b_Hess)[1:nrow(inverse_b_Var_matrix)]
View(b_temp)
b_temp = optimx(b_old, b_fn, method='L-BFGS-B', gr = b_gr, hess = b_Hess, upper = 2)[1:nrow(inverse_b_Var_matrix)]
View(b_temp)
b_temp = optimx(b_old, b_fn, method='L-BFGS-B', gr = b_gr, hess = b_Hess, upper = c(2,1,1,1))[1:nrow(inverse_b_Var_matrix)]
View(b_temp)
b_temp = optimx(b_old, b_fn, method='L-BFGS-B', gr = b_gr, hess = b_Hess, upper = c(2,2,2,2))[1:nrow(inverse_b_Var_matrix)]
View(b_temp)
b_temp = optimx(b_old, b_fn, method='L-BFGS-B', gr = b_gr, hess = b_Hess, upper = c(2.5,1,1,1))[1:nrow(inverse_b_Var_matrix)]
View(b_temp)
b_temp = optimx(b_old, b_fn, method='L-BFGS-B', gr = b_gr, hess = b_Hess, upper = c(2.5,2.5,2.5,2.5))[1:nrow(inverse_b_Var_matrix)]
View(b_temp)
a_temp = optimx(a_old, a_fn, method='L-BFGS-B', gr = a_gr, hess = a_Hess, upper = c(-5,10,10,10))[1:nrow(inverse_a_Var_matrix), ]
a_temp = optimx(a_old, a_fn, method='L-BFGS-B', gr = a_gr, hess = a_Hess, upper = c(-5,10,10,10))[1:nrow(inverse_a_Var_matrix), ]
View(a_temp)
a_temp = optimx(a_old, a_fn, method='L-BFGS-B', gr = a_gr, hess = a_Hess, upper = 10)[1:nrow(inverse_a_Var_matrix), ]
View(a_temp)
a_temp = optimx(a_old, a_fn, method='L-BFGS-B', gr = a_gr, hess = a_Hess, upper = 10)[1:nrow(inverse_a_Var_matrix)]
View(a_temp)
exp(3)
exp(2.5)
exp(2)
exp(-10)
library(statip)
library(wtest)
library(statip)
library(wtest)

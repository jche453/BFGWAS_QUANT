a_Hess_sum = 0
a_Hess_value = as.numeric(-exp(-A_temp[i,] %*% a)/(1 + exp(-A_temp[i,] %*% a)) ^ 2) * outer(A_temp[i,],A_temp[i,]) - diag(1/Asigma_2)
a_Hess_sum = a_Hess_sum + a_Hess_value
}
return(-a_Hess_sum)
}
a_temp = optimx(Apar, a_fn, method='CG', gr = a_gr, hess = a_Hess)[1:3]
View(a_Hess_sum)
a_Hess_sum = data.frame(a_Hess_sum)
View(a_Hess_sum)
a_Hess <- function(a) {
for (i in 1:nrow(A_temp)) {
a_Hess_sum = 0
a_Hess_value = as.numeric(-exp(-A_temp[i,] %*% a)/(1 + exp(-A_temp[i,] %*% a)) ^ 2) * outer(A_temp[i,],A_temp[i,]) - diag(1/Asigma_2)
a_Hess_sum = a_Hess_sum + a_Hess_value
}
a_Hess_sum = data.frame(a_Hess_sum)
return(-a_Hess_sum)
}
a_temp = optimx(Apar, a_fn, method='CG', gr = a_gr, hess = a_Hess)[1:3]
outer(A_temp[i,],A_temp[i,])
A_temp[i,]
-a_Hess_sum
is.matrix(a_Hess_sum)
as.matrix(a_Hess_sum)
a_Hess <- function(a) {
for (i in 1:nrow(A_temp)) {
a_Hess_sum = 0
a_Hess_value = as.numeric(-exp(-A_temp[i,] %*% a)/(1 + exp(-A_temp[i,] %*% a)) ^ 2) * outer(A_temp[i,],A_temp[i,]) - diag(1/Asigma_2)
a_Hess_sum = a_Hess_sum + a_Hess_value
}
a_Hess_sum = as.matrix(a_Hess_sum)
return(-a_Hess_sum)
}
a_temp = optimx(Apar, a_fn, method='CG', gr = a_gr, hess = a_Hess)[1:3]
a_Hess_sum
is.matrix(a_Hess_sum)
a_Hess_sum = as.matrix(a_Hess_sum)
a_Hess_sum
is.matrix(a_Hess_sum)
a_Hess <- function(a) {
for (i in 1:nrow(A_temp)) {
a_Hess_sum = 0
a_Hess_value = as.numeric(-exp(-A_temp[i,] %*% a)/(1 + exp(-A_temp[i,] %*% a)) ^ 2) * outer(A_temp[i,],A_temp[i,]) - diag(1/Asigma_2)
a_Hess_sum = a_Hess_sum + a_Hess_value
}
a_Hess_sum = as.matrix(a_Hess_sum)
return(-a_Hess_sum)
}
a_Hess <- function(a) {
for (i in 1:nrow(A_temp)) {
a_Hess_sum = as.matrix()
a_Hess_value = as.numeric(-exp(-A_temp[i,] %*% a)/(1 + exp(-A_temp[i,] %*% a)) ^ 2) * outer(A_temp[i,],A_temp[i,]) - diag(1/Asigma_2)
a_Hess_sum = a_Hess_sum + a_Hess_value
}
a_Hess_sum = as.matrix(a_Hess_sum)
return(-a_Hess_sum)
}
for (i in 1:nrow(A_temp)) {
a_Hess_sum = as.matrix()
a_Hess_value = as.numeric(-exp(-A_temp[i,] %*% a)/(1 + exp(-A_temp[i,] %*% a)) ^ 2) * outer(A_temp[i,],A_temp[i,]) - diag(1/Asigma_2)
a_Hess_sum = a_Hess_sum + a_Hess_value
}
a_Hess_sum = as.matrix(a_Hess_sum)
for (i in 1:nrow(A_temp)) {
a_Hess_value = as.numeric(-exp(-A_temp[i,] %*% a)/(1 + exp(-A_temp[i,] %*% a)) ^ 2) * outer(A_temp[i,],A_temp[i,]) - diag(1/Asigma_2)
a_Hess_sum = a_Hess_sum + a_Hess_value
}
a_Hess_sum = as.matrix(a_Hess_sum)
return(-a_Hess_sum)
a_Hess_sum = matrix(0,3,3)
View(a_Hess_sum)
for (i in 1:nrow(A_temp)) {
a_Hess_sum = matrix(0,3,3)
a_Hess_value = as.numeric(-exp(-A_temp[i,] %*% a)/(1 + exp(-A_temp[i,] %*% a)) ^ 2) * outer(A_temp[i,],A_temp[i,]) - diag(1/Asigma_2)
a_Hess_sum = a_Hess_sum + a_Hess_value
}
a_Hess_sum = as.matrix(a_Hess_sum)
View(a_Hess_sum)
a_Hess <- function(a) {
for (i in 1:nrow(A_temp)) {
a_Hess_sum = matrix(0,3,3)
a_Hess_value = as.numeric(-exp(-A_temp[i,] %*% a)/(1 + exp(-A_temp[i,] %*% a)) ^ 2) * outer(A_temp[i,],A_temp[i,]) - diag(1/Asigma_2)
a_Hess_sum = a_Hess_sum + a_Hess_value
}
a_Hess_sum = as.matrix(a_Hess_sum)
return(-a_Hess_sum)
}
a_temp = optimx(Apar, a_fn, method='CG', gr = a_gr, hess = a_Hess)[1:3]
a_Hess_sum = matrix(0,3,3)
View(a_Hess_sum)
a_Hess_value = as.numeric(-exp(-A_temp[i,] %*% a)/(1 + exp(-A_temp[i,] %*% a)) ^ 2) * outer(A_temp[i,],A_temp[i,]) - diag(1/Asigma_2)
View(a_Hess_value)
a_Hess_value = as.numeric(-exp(-A_temp[i,] %*% a)/(1 + exp(-A_temp[i,] %*% a)) ^ 2) * outer(A_temp[i,],A_temp[i,]) - diag(1/Asigma_2)
View(a_Hess_value)
for (i in 1:nrow(A_temp)) {
a_Hess_sum = matrix(0,3,3)
a_Hess_value = as.numeric(-exp(-A_temp[i,] %*% a)/(1 + exp(-A_temp[i,] %*% a)) ^ 2) * outer(A_temp[i,],A_temp[i,]) - diag(1/Asigma_2)
a_Hess_sum = a_Hess_sum + a_Hess_value
}
a_Hess <- function(a) {
a_Hess_sum = matrix(0,3,3)
for (i in 1:nrow(A_temp)) {
a_Hess_value = as.numeric(-exp(-A_temp[i,] %*% a)/(1 + exp(-A_temp[i,] %*% a)) ^ 2) * outer(A_temp[i,],A_temp[i,]) - diag(1/Asigma_2)
a_Hess_sum = a_Hess_sum + a_Hess_value
}
a_Hess_sum = as.matrix(a_Hess_sum)
return(-a_Hess_sum)
}
a_temp = optimx(Apar, a_fn, method='CG', gr = a_gr, hess = a_Hess)[1:3]
a_gr_sum
a_Hess <- function(a) {
a_Hess_sum = matrix(0,3,3)
for (i in 1:nrow(A_temp)) {
a_Hess_value = as.numeric(-exp(-A_temp[i,] %*% a)/(1 + exp(-A_temp[i,] %*% a)) ^ 2) * outer(A_temp[i,],A_temp[i,]) - diag(1/Asigma_2)
a_Hess_sum = a_Hess_sum + a_Hess_value
}
a_Hess_sum = as.matrix(a_Hess_sum)
return(-t(a_Hess_sum))
}
a_temp = optimx(Apar, a_fn, method='CG', gr = a_gr, hess = a_Hess)[1:3]
a
-A_temp[i,]
a
-A_temp[i,] %*% a
sum(A_temp[i,] * a)
outer(A_temp[i,],A_temp[i,])
A_temp[i,] %*% t(A_temp[i,])
a_Hess_sum = matrix(0,3,3)
for (i in 1:nrow(A_temp)) {
a_Hess_value = as.numeric(-exp(-A_temp[i,] %*% a)/(1 + exp(-A_temp[i,] %*% a)) ^ 2) * outer(A_temp[i,],A_temp[i,])
a_Hess_sum = a_Hess_sum + a_Hess_value
}
a_Hess_sum = a_Hess_sum - diag(1/Asigma_2)
a_Hess_sum = as.matrix(a_Hess_sum)
is.matrix(a_Hess_sum)
a_Hess <- function(a) {
a_Hess_sum = matrix(0,3,3)
for (i in 1:nrow(A_temp)) {
a_Hess_value = as.numeric(-exp(-A_temp[i,] %*% a)/(1 + exp(-A_temp[i,] %*% a)) ^ 2) * outer(A_temp[i,],A_temp[i,])
a_Hess_sum = a_Hess_sum + a_Hess_value
}
a_Hess_sum = a_Hess_sum - diag(1/Asigma_2)
a_Hess_sum = as.matrix(a_Hess_sum)
return(-(a_Hess_sum))
}
a_temp = optimx(Apar, a_fn, method='CG', gr = a_gr, hess = a_Hess)[1:3]
View(a_temp)
log(0.3)
Intercept = rep(1, 195)
Intercept
A_temp = cbind(Intercept, rep(1,nrow(Annodata)),Annodata[,-c(1:3)])
Atemp = cbind(Intercept, A_temp)
View(Atemp)
data.frame(diag(1/ Bsigma_2)
)
anno_variance =  data.frame(diag(1/ Bsigma_2)
)
View(anno_variance)
write.table(anno_variance,"anno_variance.txt")
write.table(anno_variance,"anno_variance.txt",row.names = F, col.names = F, quote = F)
Anno_Var_matrix = anno_variance
View(Anno_Var_matrix)
a
View(Anno_Var_matrix)
a * Anno_Var_matrix
t(a) * (a * Anno_Var_matrix)
t(a) %*% a
35* 1/2 *sum(Anno_Var_matrix)
sum(1/2 * t(a) * (a * Anno_Var_matrix))
1/2 * t(a) * a * Anno_Var_matrix)
1/2 * t(a) * Anno_Var_matrix * a
t(a)
Anno_Var_matrix
t(a) %*% a
35* 1/2 * Anno_Var_matrix
t(a) %*% (a * Anno_Var_matrix)
t(a) %*% (a * Anno_Var_matrix)
Anno_Var_matrix * a
View(Anno_Var_matrix)
test  = c(1,0.5,1)
t(a) %*% (a * test)
a_fn <- function(a) {
asum = sum(gamma_temp * (A_temp %*% a) - log(1 + exp(A_temp %*% a))) - sum(1/2 * t(a) * Anno_Var_matrix * a)
asum = as.vector(asum)
return(-asum)
}
a_gr <- function(a) {
a_gr_sum = apply(gamma_temp * A_temp - as.vector(1/(1 + exp(-A_temp %*% a))) * A_temp,2,sum) - apply(Anno_Var_matrix * a, 2, sum)
a_gr_sum = as.vector(a_gr_sum)
return(-a_gr_sum)
}
a_Hess <- function(a) {
a_Hess_sum = matrix(0,3,3)
for (i in 1:nrow(A_temp)) {
a_Hess_value = as.numeric(-exp(-A_temp[i,] %*% a)/(1 + exp(-A_temp[i,] %*% a)) ^ 2) * outer(A_temp[i,],A_temp[i,])
a_Hess_sum = a_Hess_sum + a_Hess_value
}
a_Hess_sum = a_Hess_sum - Anno_Var_matrix
a_Hess_sum = as.matrix(a_Hess_sum)
return(-(a_Hess_sum))
}
a_temp = optimx(Apar, a_fn, method='CG', gr = a_gr, hess = a_Hess)[1:3]
library(optimx)
a_temp = optimx(Apar, a_fn, method='CG', gr = a_gr, hess = a_Hess)[1:3]
a_Hess_value = as.numeric(-exp(-A_temp[i,] %*% a)/(1 + exp(-A_temp[i,] %*% a)) ^ 2) * outer(A_temp[i,],A_temp[i,])
a_Hess_sum = matrix(0,3,3)
for (i in 1:nrow(A_temp)) {
a_Hess_value = as.numeric(-exp(-A_temp[i,] %*% a)/(1 + exp(-A_temp[i,] %*% a)) ^ 2) * outer(A_temp[i,],A_temp[i,])
a_Hess_sum = a_Hess_sum + a_Hess_value
}
View(Anno_Var_matrix)
View(a_Hess_sum)
a_Hess_sum = a_Hess_sum - Anno_Var_matrix
a_Hess_sum = as.matrix(a_Hess_sum)
View(a_Hess_sum)
a_temp = optimx(Apar, a_fn, method='CG', gr = a_gr, hess = a_Hess)[1:3]
View(a_temp)
View(a_Hess_sum)
a= c(1,2,3)
a_fn <- function(a) {
asum = sum(gamma_temp * (A_temp %*% a) - log(1 + exp(A_temp %*% a))) - sum(1/2 * t(a) * a_Var_matrix * a)
asum = as.vector(asum)
return(-asum)
}
a_gr <- function(a) {
a_gr_sum = apply(gamma_temp * A_temp - as.vector(1/(1 + exp(-A_temp %*% a))) * A_temp,2,sum) - apply(a_Var_matrix * a, 2, sum)
a_gr_sum = as.vector(a_gr_sum)
return(-a_gr_sum)
}
a_Hess <- function(a) {
a_Hess_sum = matrix(0,3,3)
for (i in 1:nrow(A_temp)) {
a_Hess_value = as.numeric(-exp(-A_temp[i,] %*% a)/(1 + exp(-A_temp[i,] %*% a)) ^ 2) * outer(A_temp[i,],A_temp[i,])
a_Hess_sum = a_Hess_sum + a_Hess_value
}
a_Hess_sum = a_Hess_sum - a_Var_matrix
a_Hess_sum = as.matrix(a_Hess_sum)
return(-(a_Hess_sum))
}
a_temp = optimx(Apar, a_fn, method='CG', gr = a_gr, hess = a_Hess)[1:3]
View(A_temp)
Apar
Apar = (1,2,3)
Apar = c(1,2,3)
a_temp = optimx(Apar, a_fn, method='CG', gr = a_gr, hess = a_Hess)[1:3]
a_Var_matrix = Anno_Var_matrix
a_temp = optimx(Apar, a_fn, method='CG', gr = a_gr, hess = a_Hess)[1:3]
View(a_temp)
Intercept = rep(1, nrow(Annodata))
A_temp = cbind(Intercept, rep(1,nrow(Annodata)),Annodata[,-c(1:3)])
Intercept = rep(1,195)
A_temp = cbind(Intercept, rep(1,nrow(Annodata)),Annodata[,-c(1:3)])
A_temp = cbind(Intercept,A_temp)
View(A_temp)
a_old= c(1,2,3,4)
a_temp = optimx(a_old, a_fn, method='CG', gr = a_gr, hess = a_Hess)[1:3]
asum = sum(gamma_temp * (A_temp %*% a) - log(1 + exp(A_temp %*% a))) - sum(1/2 * t(a) * a_Var_matrix * a)
View(Atemp)
a = a_old
asum = sum(gamma_temp * (A_temp %*% a) - log(1 + exp(A_temp %*% a))) - sum(1/2 * t(a) * a_Var_matrix * a)
asum = as.vector(asum)
return(-asum)
a_gr_sum = apply(gamma_temp * A_temp - as.vector(1/(1 + exp(-A_temp %*% a))) * A_temp,2,sum) - apply(a_Var_matrix * a, 2, sum)
gamma_temp * A_temp
as.vector(1/(1 + exp(-A_temp %*% a))
)
a_Var_matrix = diag(1,2,3,4)
View(a_Var_matrix)
a_Var_matrix = diag(1,2,4)
View(a_Var_matrix)
a_Var_matrix = diag(a_old)
View(a_Var_matrix)
a_fn <- function(a) {
asum = sum(gamma_temp * (A_temp %*% a) - log(1 + exp(A_temp %*% a))) - sum(1/2 * t(a) * a_Var_matrix * a)
asum = as.vector(asum)
return(-asum)
}
a_gr <- function(a) {
a_gr_sum = apply(gamma_temp * A_temp - as.vector(1/(1 + exp(-A_temp %*% a))) * A_temp,2,sum) - apply(a_Var_matrix * a, 2, sum)
a_gr_sum = as.vector(a_gr_sum)
return(-a_gr_sum)
}
a_Hess <- function(a) {
a_Hess_sum = matrix(0,3,3)
for (i in 1:nrow(A_temp)) {
a_Hess_value = as.numeric(-exp(-A_temp[i,] %*% a)/(1 + exp(-A_temp[i,] %*% a)) ^ 2) * outer(A_temp[i,],A_temp[i,])
a_Hess_sum = a_Hess_sum + a_Hess_value
}
a_Hess_sum = a_Hess_sum - a_Var_matrix
a_Hess_sum = as.matrix(a_Hess_sum)
return(-(a_Hess_sum))
}
a_temp = optimx(a_old, a_fn, method='CG', gr = a_gr, hess = a_Hess)[1:3]
a_Hess_sum = matrix(0,3,3)
for (i in 1:nrow(A_temp)) {
a_Hess_value = as.numeric(-exp(-A_temp[i,] %*% a)/(1 + exp(-A_temp[i,] %*% a)) ^ 2) * outer(A_temp[i,],A_temp[i,])
a_Hess_sum = a_Hess_sum + a_Hess_value
}
a_Hess_sum = a_Hess_sum - a_Var_matrix
a_Hess_sum = as.matrix(a_Hess_sum)
return(-(a_Hess_sum))
asum = sum(gamma_temp * (A_temp %*% a) - log(1 + exp(A_temp %*% a))) - sum(1/2 * t(a) * a_Var_matrix * a)
asum = as.vector(asum)
return(-asum)
}
a_gr <- function(a) {
a_gr_sum = apply(gamma_temp * A_temp - as.vector(1/(1 + exp(-A_temp %*% a))) * A_temp,2,sum) - apply(a_Var_matrix * a, 2, sum)
a_gr_sum = as.vector(a_gr_sum)
return(-a_gr_sum)
}
a_Hess <- function(a) {
a_Hess_sum = matrix(0,nrow(a_Var_matrix),ncol(a_Var_matrix))
for (i in 1:nrow(A_temp)) {
a_Hess_value = as.numeric(-exp(-A_temp[i,] %*% a)/(1 + exp(-A_temp[i,] %*% a)) ^ 2) * outer(A_temp[i,],A_temp[i,])
a_Hess_sum = a_Hess_sum + a_Hess_value
}
a_Hess_sum = a_Hess_sum - a_Var_matrix
a_Hess_sum = as.matrix(a_Hess_sum)
return(-(a_Hess_sum))
}
a_temp = optimx(a_old, a_fn, method='CG', gr = a_gr, hess = a_Hess)[1:3]
a_Hess_sum = matrix(0,nrow(a_Var_matrix),ncol(a_Var_matrix))
for (i in 1:nrow(A_temp)) {
a_Hess_value = as.numeric(-exp(-A_temp[i,] %*% a)/(1 + exp(-A_temp[i,] %*% a)) ^ 2) * outer(A_temp[i,],A_temp[i,])
a_Hess_sum = a_Hess_sum + a_Hess_value
}
a_Hess_sum = a_Hess_sum - a_Var_matrix
a_Hess_sum = as.matrix(a_Hess_sum)
View(a_Hess_sum)
a_gr_sum = apply(gamma_temp * A_temp - as.vector(1/(1 + exp(-A_temp %*% a))) * A_temp,2,sum) - apply(a_Var_matrix * a, 2, sum)
a_gr_sum = as.vector(a_gr_sum)
return(-a_gr_sum)
a_gr_sum
asum = sum(gamma_temp * (A_temp %*% a) - log(1 + exp(A_temp %*% a))) - sum(1/2 * t(a) * a_Var_matrix * a)
asum = as.vector(asum)
asum = sum(gamma_temp * (A_temp %*% a) - log(1 + exp(A_temp %*% a))) - sum(1/2 * t(a) * a_Var_matrix * a)
gamma_temp * (A_temp %*% a) - log(1 + exp(A_temp %*% a)))
sum(gamma_temp * (A_temp %*% a) - log(1 + exp(A_temp %*% a)))
a
a_Var_matrix * a
t(a) * a_Var_matrix * a
t(a) * a_Var_matrix
t(a)
a_Var_matrix * a
1/2 * t(a)
as.matrix(a_Var_matrix * a)
t(a) * as.matrix(a_Var_matrix * a)
t(a)
as.matrix(t(a))
as.matrix(t(a)) * a_Var_matrix * a
t(a) %*% (a_Var_matrix * a)
sum(1/2 * t(a) %*% (a_Var_matrix * a))
a_fn <- function(a) {
asum = sum(gamma_temp * (A_temp %*% a) - log(1 + exp(A_temp %*% a))) - sum(1/2 * t(a) %*% (a_Var_matrix * a))
asum = as.vector(asum)
return(-asum)
}
a_gr <- function(a) {
a_gr_sum = apply(gamma_temp * A_temp - as.vector(1/(1 + exp(-A_temp %*% a))) * A_temp,2,sum) - apply(a_Var_matrix * a, 2, sum)
a_gr_sum = as.vector(a_gr_sum)
return(-a_gr_sum)
}
a_Hess <- function(a) {
a_Hess_sum = matrix(0,nrow(a_Var_matrix),ncol(a_Var_matrix))
for (i in 1:nrow(A_temp)) {
a_Hess_value = as.numeric(-exp(-A_temp[i,] %*% a)/(1 + exp(-A_temp[i,] %*% a)) ^ 2) * outer(A_temp[i,],A_temp[i,])
a_Hess_sum = a_Hess_sum + a_Hess_value
}
a_Hess_sum = a_Hess_sum - a_Var_matrix
a_Hess_sum = as.matrix(a_Hess_sum)
return(-(a_Hess_sum))
}
a_temp = optimx(a_old, a_fn, method='CG', gr = a_gr, hess = a_Hess)[1:3]
View(a_temp)
a_temp = optimx(a_old, a_fn, method='CG', gr = a_gr, hess = a_Hess)[1:nrow(a_Var_matrix)]
View(a_temp)
a_temp = optimx(a_old, a_fn, method='CG', gr = a_gr, hess = a_Hess)[1:nrow(a_Var_matrix)]
View(a_temp)
beta_temp
b
b_old = c(1,2,3,4)
b=b_old
tau
(- (A_temp %*% b) - tau * beta_temp ^ 2 * (1/exp(A_temp %*% b)))
sum(gamma_temp/2 *(- (A_temp %*% b) - tau * beta_temp ^ 2 * (1/exp(A_temp %*% b))))
b_Var_matrix
b_Var_matrix = a_Var_matrix
sum(gamma_temp/2 *(- (A_temp %*% b) - tau * beta_temp ^ 2 * (1/exp(A_temp %*% b))))
sum(1/2 * t(b) %*% (b_Var_matrix * b))
bsum = sum(gamma_temp/2 *(- (A_temp %*% b) - tau * beta_temp ^ 2 * (1/exp(A_temp %*% b)))) - sum(1/2 * t(b) %*% (b_Var_matrix * b))
bsum = as.vector(bsum)
apply(gamma_temp/2 *(- A_temp + as.vector(tau * beta_temp ^ 2 * (1/exp(A_temp %*% b))) * A_temp), 2, sum)
apply(b_Var_matrix * b, 2, sum)
b_Hess_sum = matrix(0,nrow(b_Var_matrix),ncol(b_Var_matrix))
View(b_Hess_sum)
gamma_temp/2 * tau * beta_temp ^ 2
b_Hess_value = as.numeric(gamma_temp[i]/2 * tau * beta_temp[i] ^ 2 * exp(-A_temp[i,] %*% a) * outer(A_temp[i,],A_temp[i,]))
i =1
outer(A_temp[i,],A_temp[i,]
)
gamma_temp[i]/2 * tau * beta_temp[i] ^ 2 * exp(-A_temp[i,] %*% a)
gamma_temp[i]/2 * tau * beta_temp[i] ^ 2 * exp(-A_temp[i,] %*% a) * outer(A_temp[i,],A_temp[i,])
gamma_temp[i]/2 * tau * beta_temp[i] ^ 2 * exp(-A_temp[i,] %*% a)
as.numeric(gamma_temp[i]/2 * tau * beta_temp[i] ^ 2 * exp(-A_temp[i,] %*% a)) * outer(A_temp[i,],A_temp[i,])
b_fn <- function(b){
bsum = sum(gamma_temp/2 *(- (A_temp %*% b) - tau * beta_temp ^ 2 * (1/exp(A_temp %*% b)))) - sum(1/2 * t(b) %*% (b_Var_matrix * b))
bsum = as.vector(bsum)
return(-bsum)
}
b_gr <- function(b){
b_gr_sum = apply(gamma_temp/2 *(- A_temp + as.vector(tau * beta_temp ^ 2 * (1/exp(A_temp %*% b))) * A_temp), 2, sum) - apply(b_Var_matrix * b, 2, sum)
b_gr_sum = as.vector(b_gr_sum)
return(-b_gr_sum)
}
b_Hess <- function(b) {
b_Hess_sum = matrix(0,nrow(b_Var_matrix),ncol(b_Var_matrix))
for (i in 1:nrow(A_temp)) {
b_Hess_value = as.numeric(gamma_temp[i]/2 * tau * beta_temp[i] ^ 2 * exp(-A_temp[i,] %*% a)) * outer(A_temp[i,],A_temp[i,])
b_Hess_sum = b_Hess_sum + b_Hess_value
}
b_Hess_sum = b_Hess_sum - b_Var_matrix
b_Hess_sum = as.matrix(b_Hess_sum)
return(-b_Hess_sum)
}
b_temp = optimx(Bpar, b_fn, method='CG', gr = b_gr, Hess = b_Hess)[1:3]
b_temp = optimx(b_old, b_fn, method='CG', gr = b_gr, Hess = b_Hess)[1:3]
bsum = sum(gamma_temp/2 *(- (A_temp %*% b) - tau * beta_temp ^ 2 * (1/exp(A_temp %*% b)))) - sum(1/2 * t(b) %*% (b_Var_matrix * b))
bsum = as.vector(bsum)
a_temp = optimx(a_old, a_fn, method='CG', gr = a_gr, hess = a_Hess)[1:nrow(a_Var_matrix)]
b_Hess_sum = matrix(0,nrow(b_Var_matrix),ncol(b_Var_matrix))
for (i in 1:nrow(A_temp)) {
b_Hess_value = as.numeric(gamma_temp[i]/2 * tau * beta_temp[i] ^ 2 * exp(-A_temp[i,] %*% a)) * outer(A_temp[i,],A_temp[i,])
b_Hess_sum = b_Hess_sum + b_Hess_value
}
b_Hess_sum = b_Hess_sum - b_Var_matrix
b_Hess_sum = as.matrix(b_Hess_sum)
View(b_Hess_sum)
b_temp = optimx(b_old, b_fn, method='CG', gr = b_gr, Hess = b_Hess)
b_old
gamma_temp
b_fn(b_old)
b_gr(b_old)
b_Hess(b_old)
b_fn <- function(b){
bsum = sum(gamma_temp/2 *(- (A_temp %*% b) - tau * beta_temp ^ 2 * (1/exp(A_temp %*% b)))) - sum(1/2 * t(b) %*% (b_Var_matrix * b))
bsum = as.vector(bsum)
return(-bsum)
}
b_gr <- function(b){
b_gr_sum = apply(gamma_temp/2 *(- A_temp + as.vector(tau * beta_temp ^ 2 * (1/exp(A_temp %*% b))) * A_temp), 2, sum) - apply(b_Var_matrix * b, 2, sum)
b_gr_sum = as.vector(b_gr_sum)
return(-b_gr_sum)
}
b_Hess <- function(b) {
b_Hess_sum = matrix(0,nrow(b_Var_matrix),ncol(b_Var_matrix))
for (i in 1:nrow(A_temp)) {
b_Hess_value = as.numeric(gamma_temp[i]/2 * tau * beta_temp[i] ^ 2 * exp(-A_temp[i,] %*% a)) * outer(A_temp[i,],A_temp[i,])
b_Hess_sum = b_Hess_sum + b_Hess_value
}
b_Hess_sum = b_Hess_sum - b_Var_matrix
b_Hess_sum = as.matrix(b_Hess_sum)
return(-b_Hess_sum)
}
b_temp = optimx(b_old, b_fn, method='CG', gr = b_gr, Hess = b_Hess)[1:3]
b_temp = optimx(b_old, b_fn, method='CG', gr = b_gr, hess = b_Hess)[1:3]
b_Hess <- function(b) {
b_Hess_sum = matrix(0,nrow(b_Var_matrix),ncol(b_Var_matrix))
for (i in 1:nrow(A_temp)) {
b_Hess_value = as.numeric(- gamma_temp[i]/2 * tau * beta_temp[i] ^ 2 * exp(-A_temp[i,] %*% a)) * outer(A_temp[i,],A_temp[i,])
b_Hess_sum = b_Hess_sum + b_Hess_value
}
b_Hess_sum = b_Hess_sum - b_Var_matrix
b_Hess_sum = as.matrix(b_Hess_sum)
return(-b_Hess_sum)
}
b_temp = optimx(b_old, b_fn, method='CG', gr = b_gr, hess = b_Hess)[1:3]
View(b_temp)
b_temp = optimx(b_old, b_fn, method='CG', gr = b_gr, hess = b_Hess)[1:nrow(b_Var_matrix)]
View(b_temp)
#####################################################
Asigma_2 = a_Hess(a_temp)
a_temp
a_Hess(a_temp)
#####################################################
Asigma_2 = a_Hess(as.vector(a_temp))
a_Hess(as.vector(a_temp))
as.vector(a_temp)
as.numeric(a_temp)
Asigma_2 = a_Hess(as.numeric(a_temp))
View(Asigma_2)
Asigma_2 = -a_Hess(as.numeric(a_temp))
View(Asigma_2)
Bsigma_2 = -b_Hess(as.numeric(b_temp))
View(Bsigma_2)
library(optimx)
########## Write out updated hyper parameter values
colnames(hypmat) <- c("#a", "b", "a_variance", "b_variance")
View(hypmat)
View(hypmat)
log(10)
exp(log(1))
log(1)
log(2)
log10(2)
log10(10)
Anum=4
c(-14,rep(100,Anum)
)
c(-12, rep(Anum,10))
c(-12, rep(10,Anum))
c(-1, rep(-10,Anum))
